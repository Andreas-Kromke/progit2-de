[[_perforce_import]]
==== Perforce

(((Perforce)))(((Importieren, aus Perforce)))
Bei dem nächsten System, aus dem Sie importieren können, handelt es sich um Perforce.
Wie bereits erwähnt, gibt es zwei Möglichkeiten, wie Git und Perforce miteinander kommunizieren können: git-p4 und Perforce Git Fusion.

===== Perforce Git Fusion

Git Fusion macht diesen Prozess relativ unkompliziert.
Konfigurieren Sie einfach Ihre Projekteinstellungen, Benutzerzuordnungen und Branches mit Hilfe einer Konfigurationsdatei (wie in <<_p4_git_fusion>> beschrieben) und klonen Sie das Repository.
Git Fusion bietet Ihnen ein natives Git-Repository, mit dem Sie nach Belieben auf einen nativen Git-Host wechseln können.
Sie können Perforce sogar als Ihren Git-Host verwenden, wenn Sie möchten.

[[_git_p4]]
===== Git-p4

Git-p4 kann auch als Import-Tool fungieren.
Als Beispiel werden wir das Jam-Projekt aus dem Perforce Public Depot importieren.
Um Ihren Client einzurichten, müssen Sie die Umgebungsvariable P4PORT exportieren und auf das Perforce-Depot verweisen:

[source,console]
----
$ export P4PORT=public.perforce.com:1666
----

[NOTE]
====
Zur weiteren Bearbeitung benötigen Sie ein Perforce-Depot, mit dem Sie sich verbinden können.
Wir werden das öffentliche Depot unter public.perforce.com für unsere Beispiele verwenden. Sie können aber jedes Depot nutzen, zu dem Sie Zugang haben.
====

(((Git Befehle, p4)))
Führen Sie den Befehl `git p4 clone` aus, um das Jam-Projekt vom Perforce-Server zu importieren, wobei Sie das Depot, den Projektpfad und den Pfad angeben, in den Sie das Projekt importieren möchten:

[source,console]
----
$ git-p4 clone //guest/perforce_software/jam@all p4import
Importing from //guest/perforce_software/jam@all into p4import
Initialized empty Git repository in /private/tmp/p4import/.git/
Import destination: refs/remotes/p4/master
Importing revision 9957 (100%)
----

Dieses spezielle Projekt hat nur einen Branch, aber wenn Sie Branches haben, die mit Branch Views (oder nur einer Gruppe von Verzeichnissen) eingerichtet sind, können Sie ergänzend zum Befehl `git p4 clone` das Flag `--detect-branches`  verwenden, um alle Branches des Projekts zu importieren.
Siehe <<_git_p4_branches>> für ein paar weitere Details.

In diesem Moment sind Sie fast fertig.
Wenn Sie in das Verzeichnis `p4import` wechseln und `git log` ausführen, können Sie Ihr importiertes Projekt sehen:

[source,console]
----
$ git log -2
commit e5da1c909e5db3036475419f6379f2c73710c4e6
Author: giles <giles@giles@perforce.com>
Date:   Wed Feb 8 03:13:27 2012 -0800

    Correction to line 355; change </UL> to </OL>.

    [git-p4: depot-paths = "//public/jam/src/": change = 8068]

commit aa21359a0a135dda85c50a7f7cf249e4f7b8fd98
Author: kwirth <kwirth@perforce.com>
Date:   Tue Jul 7 01:35:51 2009 -0800

    Fix spelling error on Jam doc page (cummulative -> cumulative).

    [git-p4: depot-paths = "//public/jam/src/": change = 7304]
----

Sie können sehen, dass `git-p4` in jeder Commit-Nachricht eine Kennung hinterlassen hat.
Es ist gut, diese Kennung dort zu behalten, falls Sie später auf die Perforce-Änderungsnummer verweisen müssen.
Wenn Sie den Identifier jedoch entfernen möchten, ist es jetzt der richtige Zeitpunkt – bevor Sie mit der Arbeit am neuen Repository beginnen.
(((Git Befehle, filter-branch)))
Sie können `git filter-branch` verwenden, um die Identifikations-Strings in großer Anzahl zu entfernen:

[source,console]
----
$ git filter-branch --msg-filter 'sed -e "/^\[git-p4:/d"'
Rewrite e5da1c909e5db3036475419f6379f2c73710c4e6 (125/125)
Ref 'refs/heads/master' was rewritten
----

Wenn Sie `git log` ausführen, können Sie sehen, dass sich alle SHA-1-Prüfsummen für die Commits geändert haben, aber die `git-p4` Zeichenketten sind nicht mehr in den Commit-Nachrichten enthalten:

[source,console]
----
$ git log -2
commit b17341801ed838d97f7800a54a6f9b95750839b7
Author: giles <giles@giles@perforce.com>
Date:   Wed Feb 8 03:13:27 2012 -0800

    Correction to line 355; change </UL> to </OL>.

commit 3e68c2e26cd89cb983eb52c024ecdfba1d6b3fff
Author: kwirth <kwirth@perforce.com>
Date:   Tue Jul 7 01:35:51 2009 -0800

    Fix spelling error on Jam doc page (cummulative -> cumulative).
----

Ihr Import ist bereit, um ihn auf Ihren neuen Git-Server zu pushen.
